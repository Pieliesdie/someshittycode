@using BLL
@model Common.User

@{
    var db = new UsersAndRewardsDataProvider(UsersAndRewardsDataProvider.MemoryType.DataBase);
    var Rewards = db.GetRewards();
    var user = Model;
    List<Common.Reward> userReward = null;
    if (user != null)
    {
        userReward = db.GetUserRewardsByID(user.ID).ToList();
        foreach (var reward in userReward)
        {
            Rewards.Remove(Rewards.First(x=>x.ID==reward.ID));
        }
        ViewBag.Title = "Edit user";
        <h2>User Edit</h2>
    }
    else
    {
        <h2>User Create</h2>
        ViewBag.Title = "User Create";
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Birthday, new { @class = "datepicker", @value = Model?.Birthday.ToShortDateString() })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <p>Add rewards</p>
                @for (var i = 0; i < Rewards.Count; i++)
                {
                    var r = Rewards[i];
                    <p>
                        <input type="checkbox" name="rewards" value="@r.ID" /> @r.Title
                    </p>
                }
            </div>
            <div class="col-md-offset-2 col-md-10">
                @if (userReward != null)
                {
                    <p>Remove rewards</p>
                    for (var i = 0; i < userReward.Count; i++)
                    {
                        var r = userReward[i];
                        <p>
                            <input type="checkbox" name="removeRewards" value="@r.ID" /> @r.Title
                        </p>
                    }
                }
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ok" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
